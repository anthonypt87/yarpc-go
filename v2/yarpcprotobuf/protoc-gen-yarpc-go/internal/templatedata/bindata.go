// Code generated by go-bindata.
// sources:
// internal/templatedata/base.tmpl
// internal/templatedata/bindata.go
// internal/templatedata/caller.tmpl
// internal/templatedata/client.tmpl
// internal/templatedata/client_stream.tmpl
// internal/templatedata/fx.tmpl
// internal/templatedata/handler.tmpl
// internal/templatedata/parameters.tmpl
// internal/templatedata/server.tmpl
// internal/templatedata/server_stream.tmpl
// DO NOT EDIT!

package templatedata

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _internalTemplatedataBaseTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x8c\xcd\x6e\xea\x30\x10\x85\xf7\x7e\x8a\x73\x23\x16\xb7\x52\x93\xec\x91\xba\x2a\x6d\xc5\x06\x90\xe0\x05\xa6\xce\x10\xac\x3a\xb6\x35\x71\x51\x91\xe5\x77\xaf\x8a\xa1\x3f\x52\xd8\xcd\x39\xdf\x7c\xa7\x6d\xf1\xe8\x3b\x46\xcf\x8e\x85\x22\x77\x78\x3d\x21\x88\x8f\x5e\xd7\x3d\xbb\xfa\x44\x12\x74\xdd\x7b\xd5\xb6\x18\xfd\xbb\x68\x9e\x23\xa5\xe6\xd9\x58\x6e\x56\x34\x70\xce\x5f\x64\xb1\xc6\x6a\xbd\xc3\xd3\x62\xb9\xfb\xa7\x54\x20\xfd\x46\x3d\x7f\xff\x6d\x4a\x6e\x5e\xfc\xe5\xca\x59\xa9\x94\xcc\x1e\x85\x6f\x59\x8e\x46\xf3\x88\x3a\x67\x05\x98\x21\x78\x89\xf8\xaf\x00\x20\x25\x21\xd7\x33\x66\xa5\xdd\x50\x3c\xdc\x63\x46\xd6\xd0\x88\xf9\x03\x9a\xe5\xb9\xbe\xaa\xc5\x28\x38\x67\x54\x29\xfd\xf2\x72\xae\x2e\x93\xec\xba\x8b\x70\xa7\x7e\x92\x4a\x29\xf2\x10\x2c\x45\x46\xa5\xad\x61\x17\x2b\x34\x67\xf4\x87\x90\xb5\x2c\x93\xe4\xec\x6c\xa3\x30\x0d\x53\x7c\x64\x39\x4e\x9b\x07\x72\xdd\x8d\xd1\x22\xdd\x1e\xdd\x7f\x4c\xb5\x81\x84\x06\x8e\x2c\xe3\x95\x7e\x06\x00\x00\xff\xff\xd7\x0d\x55\xa2\xe9\x01\x00\x00")

func internalTemplatedataBaseTmplBytes() ([]byte, error) {
	return bindataRead(
		_internalTemplatedataBaseTmpl,
		"internal/templatedata/base.tmpl",
	)
}

func internalTemplatedataBaseTmpl() (*asset, error) {
	bytes, err := internalTemplatedataBaseTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/templatedata/base.tmpl", size: 489, mode: os.FileMode(420), modTime: time.Unix(1538668253, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _internalTemplatedataBindataGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x01\x00\x00\xff\xff\x00\x00\x00\x00\x00\x00\x00\x00")

func internalTemplatedataBindataGoBytes() ([]byte, error) {
	return bindataRead(
		_internalTemplatedataBindataGo,
		"internal/templatedata/bindata.go",
	)
}

func internalTemplatedataBindataGo() (*asset, error) {
	bytes, err := internalTemplatedataBindataGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/templatedata/bindata.go", size: 0, mode: os.FileMode(420), modTime: time.Unix(1538668994, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _internalTemplatedataCallerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xe4\x55\xcd\x6e\xdb\x3c\x10\xbc\xeb\x29\x26\x46\xbe\x0f\x96\xa1\x30\x77\x17\x3e\x19\x6d\x4f\xfd\x41\xdd\x7b\xa0\xca\x2b\x85\xb0\x44\xca\x24\xdd\xc4\x58\xf0\xdd\x0b\x92\x8a\x65\xd7\x4e\x4e\x0d\x82\xa2\x27\xaf\x56\x3b\x3b\x33\xbb\xa4\xc5\xbc\xa6\x5a\x2a\xc2\xa4\x2a\xdb\x96\xcc\x04\x37\xde\x67\xcc\x0f\xd2\xdd\x43\x7c\x90\x2d\xc5\xc7\xeb\x46\xf7\x9b\x06\xf3\x05\xc4\xd7\xb2\xda\x94\x0d\x89\x8f\x7a\x88\xbc\xcf\x32\x66\x53\xaa\x86\x20\x56\x64\x7e\xca\x8a\x6c\x6c\x03\x30\x5f\xa7\xbe\x11\xba\x8c\x61\xa8\x0f\x6f\x6e\x67\x48\x09\xc8\xae\x6f\xa9\x23\xe5\x4a\x27\xb5\xc2\xec\x36\x95\xb8\x7d\x4f\x63\x07\xef\x61\x9d\xd9\x55\x0e\x9c\x01\x08\x0f\x54\x76\xd8\x97\xa6\xaf\x7a\xa3\x9d\xfe\xb1\xab\xc5\x2a\x26\x97\xad\x24\xe5\x32\x60\x60\x1a\xb4\x7d\x22\x77\xaf\xd7\x36\x0a\x0b\x69\x59\xa3\x54\x6b\x88\x54\x9e\xa0\x52\x35\xc9\x04\x99\x31\x71\x33\x40\x80\x7a\xa7\x2a\x4c\x2b\xcc\x8e\x64\xe5\x60\x16\x9f\xcb\x8e\xbc\x9f\x56\xee\x11\x95\x56\x8e\x1e\x9d\x58\xa6\xdf\x02\xba\x77\x16\x42\x88\x28\x35\x0e\xe1\x4b\x1f\x8c\xe6\x98\x32\x9f\xb0\x7b\x5f\x80\x8c\xd1\x26\x1f\x4c\x46\xa3\x31\x17\x06\x58\x89\x64\x3a\xf6\x48\x88\xc0\x58\x80\xb9\x37\x52\xb9\x1a\x93\xff\xb6\x13\x0c\x62\x12\xb1\x10\x22\x3f\xb4\x92\x75\x6c\x75\xb5\x80\x92\xed\x11\x05\x60\xc8\xed\x8c\x0a\xe9\xc8\x76\x78\xe3\xb3\xdf\x2a\xfe\xbf\x3b\xd3\xcc\x49\xd5\x1c\xd6\x17\xa1\x43\x76\x0c\x65\xa6\xd6\x52\x60\x3e\x9b\xf3\xbf\x33\xd6\xd7\x9a\xe8\x1f\x3e\xa8\x86\xb6\x01\xd0\xe8\xef\xe1\xe6\x89\x6f\xb4\xdd\x91\x75\x48\x97\xff\xc9\xf9\x5f\x3d\xf2\x01\x36\x5f\xc0\x8a\x15\xa9\xf5\xd4\xd0\x36\x7f\xf7\x56\x97\xe2\x0d\xd7\x75\x82\xb3\xbd\x56\x96\x8e\x80\x67\x9b\xeb\x6c\x73\x79\x77\x2f\x6e\xcd\xd0\xb6\x80\xa2\x07\xe6\x03\x49\xa0\x7c\x85\xbf\x26\x5b\x40\x6f\x82\xb8\xce\x36\xe2\x45\x73\x27\x8c\x57\x7a\xf3\x2c\xd5\xe9\x87\x65\x59\x5a\xf7\x3e\x4c\x65\x7a\x47\x5d\xef\xf6\x17\x2c\x19\xb2\xf9\xf3\x47\x24\x6a\xbc\x70\x0e\xd4\xfa\xf0\xa9\x7c\x8a\xc7\x68\x0c\xc7\xdc\xaf\x00\x00\x00\xff\xff\xe7\x52\x36\x59\xb2\x07\x00\x00")

func internalTemplatedataCallerTmplBytes() ([]byte, error) {
	return bindataRead(
		_internalTemplatedataCallerTmpl,
		"internal/templatedata/caller.tmpl",
	)
}

func internalTemplatedataCallerTmpl() (*asset, error) {
	bytes, err := internalTemplatedataCallerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/templatedata/caller.tmpl", size: 1970, mode: os.FileMode(420), modTime: time.Unix(1538668352, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _internalTemplatedataClientTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x52\xcb\x6e\xdb\x30\x10\xbc\xeb\x2b\x06\x46\x1f\xb6\xe1\xd2\xf7\x00\x3d\x14\x06\xd2\x53\xdd\x34\xe9\xa5\x47\x86\x5e\xc9\x44\x14\x52\x21\x57\x75\x0d\x82\xff\x5e\x50\x54\xf5\xb0\x0b\xb4\x40\x74\x11\xb9\x8b\x9d\x99\x1d\x4e\x08\x07\x2a\xb5\x21\x2c\x54\xad\xc9\xf0\x02\x1f\x62\x2c\x42\x38\x69\x3e\x42\xdc\xea\x9a\xba\xeb\x9b\xca\x36\x4f\x15\x6e\x3e\x42\xdc\x49\xf5\x24\x2b\x12\x9f\x6d\x7f\x8a\xb1\x28\x42\x70\xd2\x54\x04\xf1\x40\xee\xa7\x56\xe4\x3b\x98\x02\x08\x61\xbb\xc6\xae\x83\x86\x36\x4c\xae\x94\x8a\xb0\xde\xe6\xee\x76\x8b\x10\x44\x6e\xc7\x08\xed\xc1\x47\x4a\xa5\xbd\x7c\xa6\x18\xe1\x33\xda\x7b\x0f\x75\x01\x21\x0a\x80\xcf\x0d\xcd\xe7\x07\x82\x50\x00\x89\xbc\x57\xf5\x85\xf8\x68\x0f\x59\x14\x90\x5b\xba\x84\x75\xe8\x87\x1f\xd8\x91\x7c\xd6\xa6\xca\x1b\x90\x1b\x0b\xe3\x0c\x46\x65\xcb\xa1\x04\x28\x6b\x98\x7e\xb1\xd8\xe5\xff\x66\xd2\xea\x58\x8c\xe5\x6b\x9a\x29\x6a\xfa\xd6\x21\x54\xf6\x7b\x5a\x48\xdc\xd3\x4b\x4b\x9e\x91\x3d\x8f\x71\x0e\x48\xe6\x70\x31\x2c\x84\x38\x4b\xd7\x28\xb1\x93\x75\xfd\xb5\x61\x6d\xcd\x38\xb2\xc2\x72\x70\x28\xb3\xc7\xb8\x01\x39\x67\xdd\x6a\xb0\x82\x6a\x4f\xaf\xda\xf3\x3f\xd5\xff\x4b\xe9\x0c\xc6\x37\xd6\x78\x1a\x71\xae\x44\x4f\x8c\x98\xde\xae\x62\xa7\xac\xf1\xec\x5a\x95\xe8\xa6\xc9\xdb\xd3\x69\x1a\x9e\xc7\x56\xd7\x07\x0f\x09\x43\x27\xfc\xf8\x74\x7f\xb7\xfb\x13\xba\xd2\xba\xbf\xe7\x32\x85\xb0\x6c\x8d\xba\x80\x5a\x2a\xf4\x6b\x76\x85\x0d\x6c\xc3\x7e\x58\xbe\x71\x96\xed\x63\x5b\xf6\xdd\x6c\xc3\x6a\x96\xe3\x9c\x5e\x47\xdc\x3a\x83\x77\xa9\x23\xeb\x9a\x5c\x8c\xc1\x77\x4f\x78\x83\x39\xd2\x9e\x4e\xf9\x6d\x33\xc2\x52\x6d\x10\x42\xe3\xb4\xe1\x12\x8b\xb7\x2f\x0b\x88\xdb\x6f\xfb\x64\x61\x12\x22\x84\x58\xf5\x3e\x8d\xb6\x8d\xc7\xb1\xf6\x3b\x00\x00\xff\xff\x40\x4d\x5f\x8d\x1b\x04\x00\x00")

func internalTemplatedataClientTmplBytes() ([]byte, error) {
	return bindataRead(
		_internalTemplatedataClientTmpl,
		"internal/templatedata/client.tmpl",
	)
}

func internalTemplatedataClientTmpl() (*asset, error) {
	bytes, err := internalTemplatedataClientTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/templatedata/client.tmpl", size: 1051, mode: os.FileMode(420), modTime: time.Unix(1538668894, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _internalTemplatedataClient_streamTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x55\x4d\x8f\x9b\x3c\x10\xbe\xe7\x57\xcc\xae\xf6\x00\xd1\xbe\xce\xfd\xad\xf6\x50\xad\xda\x9e\xaa\x56\x49\xef\x2b\x6a\x06\x62\x05\x6c\xd6\x36\xd9\x46\x16\xff\xbd\xb2\x31\x0e\x04\x88\x68\xd4\xaa\x3d\xc5\x19\x3c\xcf\xc7\xf0\xd8\x18\x93\x62\xc6\x38\xc2\x3d\x2d\x18\x72\xbd\xd3\x12\x93\xf2\x1e\xfe\x6b\x9a\x95\x31\x6f\x4c\xef\x81\x7c\x64\x05\xba\xbf\x0f\xb9\xa8\x0e\x39\xfc\xff\x04\xe4\x6b\x42\x0f\x49\x8e\xe4\x93\xf0\xab\xa6\x59\xad\x8c\x91\x09\xcf\x11\xc8\x0e\xe5\x91\x51\x54\x0e\x06\xc0\x98\x87\x16\xdd\xb5\x3e\xbb\xa5\xdd\x6f\x9f\x6c\xd6\xd0\x16\x40\x39\x6a\x60\x5c\xa3\xcc\x12\xdb\xbd\xde\x74\xbb\x3c\xee\x67\xd4\x7b\x91\x76\xb0\xf6\x01\xcb\x40\xc8\x0e\xb3\x15\xcf\x78\xde\x2a\x40\x19\x0a\x7e\xff\x66\x03\xc6\x0c\x36\x37\x0d\x30\x05\x89\x27\xb7\xad\x81\x1f\x6a\x85\x29\x30\x0e\x7a\x8f\x67\x0b\xb6\xa1\xdb\x41\x1c\xa8\x3e\x55\x38\x05\x1b\x70\x8c\xdb\x06\xf0\x2c\xb8\xc6\x1f\x3a\x8a\x81\xb6\x2b\xe2\x2b\x67\x2f\x23\x23\x9d\x53\x80\x1d\xf2\x34\x5a\x1b\x93\x8b\x6f\x96\x90\x6c\xf1\xb5\x46\xa5\xa1\x7d\x29\x4d\xf3\x08\x84\x90\x53\x22\x2b\x4a\xda\xf6\x2f\x95\x66\x82\xc7\x80\x52\x0a\xe9\x29\x90\xa7\xc3\xe1\x5d\x0e\xaa\x47\xb8\x45\x7a\x8c\x66\x30\x87\x42\x54\x25\xb8\xc2\x9e\x12\x47\x19\x77\xb6\x0b\xa1\xd0\xa9\xbf\x45\x60\xc2\xd3\xf1\x54\x22\x2e\xf4\x48\x7a\xdc\xd3\xee\x38\xdf\xf3\xf4\xf7\x78\x18\xca\x6a\x46\xb5\xf3\x7a\x26\xd2\x65\x55\x60\x89\x5c\x27\x96\xf9\x0f\xe4\xda\x45\xf0\x65\x9c\x41\xa5\x65\x4d\x75\x08\xa0\x97\xb3\x76\xd3\xa8\xa4\xd0\xe2\x7b\x9d\x0d\x7a\xbc\x41\xf7\x93\xd5\x9c\x42\x44\x61\x3d\x06\x8e\xe7\xb3\x1c\xc8\x24\xea\x5a\x72\xa0\xa4\x65\x25\xa1\xa3\xcf\x31\x19\x7a\x6f\xea\x2a\xbf\xcb\x93\xc4\x57\xb8\x7a\x22\x44\xa5\xd5\xd5\x63\x31\xab\xb6\xc3\x6f\x31\x08\x21\xf1\xe4\xbb\x9f\x3f\x48\x4b\x4c\xb8\x74\x5e\xd3\xb8\x28\xa2\xc1\x43\xa9\x72\x57\xb3\xb7\x6c\x30\xb2\x45\x8a\xec\x88\x11\xc7\x37\x63\x02\x88\x85\xec\x06\x14\xcc\x01\xb0\xcc\xf5\xdf\x3d\x01\x67\x45\xc0\x0d\xd3\xe1\xac\x70\x04\xbe\xde\x84\xd9\xa9\x47\x10\x07\x4b\x5b\xaa\x9c\x58\xd1\x17\x44\x3d\xfc\x3b\x71\x98\x01\xbe\x48\x65\xa2\xf4\x07\xeb\x2f\x7a\xc1\xb2\xd2\xa7\x09\xf1\xa5\xca\xe3\x91\x14\x87\xe7\x14\x71\x56\x2c\x8f\x73\xb8\xa3\x6e\x8f\x8c\xc3\x88\x16\xc6\xe5\x17\xae\xb5\x25\x49\x1a\xdc\x77\xcb\x13\x75\x79\x5e\x2e\x02\xe5\xe3\xd0\x8f\xd3\xd0\xe4\xbb\x5b\xe2\xf2\x0f\xc5\x74\xf6\x6c\xfd\x95\xc0\x76\x92\x67\x52\x33\xf9\xbd\x99\x5a\x9e\x6b\x3f\x03\x00\x00\xff\xff\xb1\x85\xea\xd2\xde\x09\x00\x00")

func internalTemplatedataClient_streamTmplBytes() ([]byte, error) {
	return bindataRead(
		_internalTemplatedataClient_streamTmpl,
		"internal/templatedata/client_stream.tmpl",
	)
}

func internalTemplatedataClient_streamTmpl() (*asset, error) {
	bytes, err := internalTemplatedataClient_streamTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/templatedata/client_stream.tmpl", size: 2526, mode: os.FileMode(420), modTime: time.Unix(1538668547, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _internalTemplatedataFxTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x95\x5f\x6b\xdb\x3c\x14\xc6\xef\xf5\x29\x0e\xa6\x2f\xd8\x25\x55\xe0\xbd\x0c\x8c\xc1\x36\xb2\xf5\xa6\x09\xdb\xee\xc6\x58\x55\xe7\xd8\x11\x75\x25\x4d\x92\x13\x17\xe1\xef\x3e\xf4\x27\x8d\x13\xbb\x25\xbd\x68\xb1\x8f\x8e\x1e\xfd\x74\xce\x79\x1c\xe7\x36\x58\x71\x81\x90\x55\x5d\x06\x37\x7d\x4f\x9c\xdb\x73\xbb\x05\xba\xe4\x0d\x86\xd7\xab\x5a\xaa\xc7\x1a\x16\x1f\x80\xae\x59\xf9\xc8\x6a\xa4\x5f\x65\x7a\xea\x7b\x42\x9c\xd3\x4c\xd4\x08\xf4\x07\xea\x1d\x2f\xd1\x04\x19\xe2\xdc\xfc\x1a\x96\x1d\x94\x0d\x47\x61\x0d\x5c\xcf\x63\xf4\xaa\xea\x3e\x87\x90\x57\x54\x9a\x0b\x5b\x41\xb6\xec\xfe\x33\x19\xd0\xb8\xe0\xf3\xe6\x73\x18\xa4\xf6\xfd\x9a\x69\xf6\x64\x20\xc2\x1a\xb0\x5b\x04\xe5\x43\x68\x51\x1b\x9f\xad\xf1\x6f\xcb\x35\x6e\xc0\x4a\x50\x5a\xee\xf8\x06\x81\x81\x73\x2f\x9a\xc0\x85\x95\xc0\x84\x4f\x5e\x76\xc0\x94\x6a\x78\xc9\x2c\x97\x82\x12\xfb\xac\x70\xf2\x3c\x63\x75\x5b\x5a\x70\x04\xa0\xea\xe8\xad\x20\x04\x20\xd1\x3f\x33\xad\xca\xa4\x4e\x26\x88\xbf\xa3\x69\x1b\x7b\x60\x31\xa7\x30\x3e\x3b\xf1\x5c\x00\x93\xa4\x4e\x61\x56\xad\x1d\xd0\x0c\xb5\x23\xcc\x1d\xee\x4f\x44\xde\x4d\x32\x83\xd6\x70\x51\x87\x5a\xd7\x7c\x87\xa1\x72\x82\x3d\x21\x54\x52\x83\x96\xad\xe5\xa2\xa6\x64\x3e\xf7\x71\x4f\xb4\x8e\x07\xe4\xe1\x1d\xe0\x30\x39\x7d\x4f\xcf\x59\xf2\xcc\xc4\x59\xb9\xf1\x7a\x59\x31\x4b\x5b\x28\xa5\xe1\xa9\xf0\xff\x7f\xae\xbe\xac\xf2\x27\x14\xa6\xdc\x16\x0b\xf8\x26\xf7\xb0\xe7\x4d\x03\x76\xcb\x0d\xec\xa5\x7e\x04\x2e\x60\xf7\xff\x47\x52\xb5\xa2\x1c\xdd\x36\xff\xe3\xcb\xc5\x45\x3d\x03\xa9\xac\xf1\xca\xa1\x61\x4a\x4b\x2b\x1f\xda\x2a\xdd\x7f\xa5\xfc\x4d\x0b\x5f\x01\xd4\x15\x2b\xd1\xf5\xa1\xbe\x1a\x6d\xab\x05\x78\xe9\x5c\x4d\x4d\x46\x31\xd9\x21\xbf\xf5\x65\xf3\x44\x42\x5c\x3f\x34\x6d\x31\xa6\x56\x89\x2b\x52\x53\x4a\x8b\x59\xd8\xd2\x13\xff\x37\x70\x95\xd2\xb2\xc4\x4d\xab\x31\x19\x0b\x20\x5a\x6b\x7d\x8c\x9f\xd9\x2b\x18\xec\xce\xb7\x2f\x3b\x26\x65\x43\xaf\x1d\xc3\xaf\xfb\x8d\xbd\xe5\x37\x9f\xe5\x5c\xf8\x0e\xa0\x8e\x13\x97\x04\x2f\x9b\xf7\x09\x80\x29\x03\x46\xfd\xe1\x49\xe4\x95\x5b\x9c\x7b\xf0\x0c\xd0\xef\x19\x14\xf2\x7d\x80\x6f\x99\x72\xd0\x85\x5f\xbf\xe3\x87\xe2\x25\x04\xf7\xb5\x96\xad\x5a\x64\x21\x5e\x75\xd9\xfd\x99\x61\x87\x87\x5c\x8a\x3e\x09\x0e\xb7\x16\xb0\x53\x58\xda\x50\x7f\x76\xd2\x1b\x2b\xe1\x01\x41\x69\x34\xfe\xf3\xc1\x45\x38\xa0\x94\xc2\x32\x2e\x50\xbf\xcf\xd6\x43\xe2\x7c\xc2\xcc\x27\x0e\x3d\x4d\xbe\xc4\x79\xe3\xb1\x28\x5e\x6d\xc7\xd8\x81\xe3\xa4\x83\x0b\x8f\x2b\x0b\xf8\xd4\xf2\x66\xe3\x5c\x30\x48\xdf\x1f\x57\x72\x95\x4a\x36\x36\x22\x8a\xcd\xe1\x97\x2e\x3d\x1e\x63\xff\x02\x00\x00\xff\xff\x0f\x05\xc5\xd8\x57\x07\x00\x00")

func internalTemplatedataFxTmplBytes() ([]byte, error) {
	return bindataRead(
		_internalTemplatedataFxTmpl,
		"internal/templatedata/fx.tmpl",
	)
}

func internalTemplatedataFxTmpl() (*asset, error) {
	bytes, err := internalTemplatedataFxTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/templatedata/fx.tmpl", size: 1879, mode: os.FileMode(420), modTime: time.Unix(1538668204, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _internalTemplatedataHandlerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\x5d\x6f\xda\x30\x14\x7d\xe7\x57\x9c\x55\xd5\x94\xa0\xd4\x7d\xaf\xc4\x13\xda\xc7\x4b\xa7\xa9\xec\x1d\x79\xce\x25\x58\x4d\x9c\x60\x3b\x14\x64\xf9\xbf\x4f\x76\x42\x42\xda\x31\x15\x69\x1b\x2f\x5c\xdf\xe4\x9e\x7b\x3e\x22\x3b\x97\xd3\x46\x2a\xc2\xcd\x96\xab\xbc\x24\x7d\x83\x3b\xef\x67\xce\xbd\x48\xbb\x05\xfb\x2c\x4b\x8a\xc7\xdb\xa2\x6e\x9e\x0b\x3c\x2c\xc0\xbe\x73\xf1\xcc\x0b\x62\x5f\xea\xbe\xf2\x7e\x36\x73\x4e\x73\x55\x10\xd8\x8a\xf4\x5e\x0a\x32\x11\x06\x70\xee\xb6\x07\x8e\xb3\x5f\xbb\x3a\x4c\x84\x67\xf7\x73\xf4\x1d\xc8\xaa\x29\xa9\x22\x65\xb9\x95\xb5\xc2\xfc\xbe\x7b\xc7\x1e\x1b\x3a\x03\xf1\x1e\xc6\xea\x56\x58\xb8\x19\x00\x18\xd2\x7b\xd2\x70\x2e\xee\x8d\xc0\x40\x0f\xde\x13\x7a\x24\xbb\xad\x73\x13\x9f\x84\xb6\xdc\x80\xab\x1c\x6c\x59\x4a\x52\x76\x65\x35\xf1\x4a\xaa\x02\x3d\xc2\xd8\xb8\xeb\x47\x80\x4d\xab\x04\x92\x2d\xe6\xe7\x44\xd2\xb0\xf5\x1b\xaf\xc8\xfb\xc4\x60\x7e\xe4\xba\x11\x8d\xae\x6d\xfd\xb3\xdd\x4c\xb0\x52\x90\xd6\xb5\xee\x19\x87\x9f\x26\xdb\x6a\x85\x2d\xeb\xe8\xb3\x11\xe8\xe3\x7a\x90\xd2\x0d\x7b\xef\x4c\x2c\x1e\x60\x7c\xda\x23\x9c\xa4\x50\x69\x08\x72\xf3\x56\xcb\xbf\xa4\x6e\xb2\xd0\x0c\x69\xbe\x97\x7f\x3c\x9e\xf3\x47\x20\x1d\x40\x3e\x2c\xa0\x64\x79\x06\x3f\x78\x43\x5a\x0f\x4d\xff\xda\x38\xc3\x56\xa4\xf2\x44\x93\xb9\xe8\xc8\xff\x0c\x53\xec\x07\x4b\x0c\x7b\x22\x41\x72\x4f\x89\xa2\x17\xe7\xd8\x13\xed\x5a\x32\xf6\xc7\xb1\x21\xff\x37\xe4\xef\x32\xac\xc3\x9e\xb0\x94\x25\xf3\x3f\x6e\xd0\xb4\xc3\xe2\xe2\x86\xa9\xc4\x25\x37\xf6\x53\x10\x96\xac\xa9\x6a\xec\xf1\x35\x70\x16\x37\xa6\x97\x23\xf9\xcd\xb7\x10\xd9\xbe\xef\x83\x98\xc4\x77\x45\x54\xc2\x1e\x20\x6a\x65\xe9\x60\xd9\xb2\xfb\xcf\x50\x21\xca\x62\x8f\x64\x0c\x2f\x28\x45\x32\x39\x67\x5d\x82\xe9\x24\xc2\x93\xaf\x55\x34\xb5\xa8\x83\x6a\x9c\x2c\x40\x77\xf9\x5d\x65\xaf\x92\x65\x76\xb5\xc7\xd5\x75\x06\x0b\x7b\x08\xb9\xec\xde\xb8\xa8\xf2\xe1\xf6\x3d\xd5\x63\x35\x96\x63\xef\x57\x00\x00\x00\xff\xff\x51\xd5\x44\xcc\x06\x06\x00\x00")

func internalTemplatedataHandlerTmplBytes() ([]byte, error) {
	return bindataRead(
		_internalTemplatedataHandlerTmpl,
		"internal/templatedata/handler.tmpl",
	)
}

func internalTemplatedataHandlerTmpl() (*asset, error) {
	bytes, err := internalTemplatedataHandlerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/templatedata/handler.tmpl", size: 1542, mode: os.FileMode(420), modTime: time.Unix(1538668598, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _internalTemplatedataParametersTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x90\x4d\x6b\xc3\x30\x0c\x86\xef\xf9\x15\x2f\x65\x8c\xb6\xb0\xf4\x3e\xe8\x71\xdb\x69\x50\xb6\xdd\x87\x49\xd4\x34\x74\xb5\x3d\xdb\x69\x09\x42\xff\x7d\x24\x71\xbc\xf4\x83\xde\x24\xa1\xf7\x41\x8f\x98\x4b\xda\xd6\x9a\x30\xb3\xca\xa9\x03\x05\x72\x7e\x86\x27\x91\x8c\xf9\x54\x87\x1d\xf2\xd7\xfa\x87\xfa\xf6\xa1\x32\x76\x5f\xe1\x79\x8d\x7c\xa3\x8a\xbd\xaa\x28\x7f\x33\xb1\x12\xc9\x32\x66\xa7\x74\x45\xc8\x3f\xc9\x1d\xeb\x82\x7c\x8f\xc9\x00\xe6\xd5\x12\x9b\x11\x8f\xc2\x68\x1f\x5c\x53\x04\xe3\x3c\x96\xab\x71\x27\x86\xdf\x29\xec\x4c\x39\x64\x01\x60\xdb\xe8\x02\x9a\x4e\xcc\xf9\x07\xfd\x36\xe4\xc3\x57\x6b\x49\x64\xbe\x00\x18\x8e\x42\xe3\x34\x1e\x99\x2b\xd3\xcd\x31\x2e\x61\xb8\x56\x84\x05\xb8\x41\xf2\xd6\x68\x4f\x09\x75\x9b\x34\x2c\x4d\x51\xd2\x9f\x4a\xba\x3c\x73\x7b\x39\xd8\xd0\x22\x3d\x10\xa1\xb5\x34\x55\x1b\x1e\x19\xcd\xa2\xd7\x51\x39\xcc\xfb\x2a\xa9\x27\x67\xe0\x9b\x3a\xe4\xa5\x33\xb0\xbe\xaf\x7a\x9d\x9e\x7a\x5e\xa6\xaf\xf4\xe2\x39\xa3\x5e\xd7\x2d\xce\x84\x27\xea\xa9\xfc\x9f\xfd\x05\x00\x00\xff\xff\xae\x3a\xaf\xf9\x4c\x02\x00\x00")

func internalTemplatedataParametersTmplBytes() ([]byte, error) {
	return bindataRead(
		_internalTemplatedataParametersTmpl,
		"internal/templatedata/parameters.tmpl",
	)
}

func internalTemplatedataParametersTmpl() (*asset, error) {
	bytes, err := internalTemplatedataParametersTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/templatedata/parameters.tmpl", size: 588, mode: os.FileMode(420), modTime: time.Unix(1538668617, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _internalTemplatedataServerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xbc\x54\xc1\x8e\xd3\x30\x10\xbd\xe7\x2b\x46\xd5\x02\xed\x6a\x71\xef\x91\x38\x40\xa5\x85\x0b\xab\xb2\x0b\x07\x84\x38\x98\x64\x92\x5a\xdb\xda\x59\xdb\x69\xa9\x2c\xff\x3b\x72\xec\xc6\x4e\xb2\xd5\x56\x02\xd1\x4b\x6d\xcf\x9b\xe7\x37\xe3\x37\x31\xa6\xc4\x8a\x71\x84\x99\x42\xb9\x47\x39\x83\xb7\xd6\x66\xc6\x1c\x98\xde\x00\xb9\x65\x5b\xec\xb6\x57\xb5\x68\x1e\x6b\xc8\xdf\x01\x59\xd3\xe2\x91\xd6\x48\x3e\x8a\xb0\xb2\x36\xcb\x8c\x91\x94\xd7\x08\xe4\x01\xe5\x9e\x15\xa8\x3a\x1a\x00\x63\xae\xd4\xbe\xe8\xf2\xee\xe8\xae\x83\xba\xc3\xe5\x35\x04\x20\x30\xae\x51\x56\xb4\x40\xb8\x5e\xfa\xf0\x72\x09\xc6\x74\x44\x28\xad\x05\xa6\x40\x6f\x30\x30\x59\x0b\xca\x27\xbe\x51\xe0\x15\x47\x06\x92\x01\xe8\x63\x83\xc3\xf4\x9e\xdf\x64\x00\xee\xf2\xa0\xf4\x33\xea\x8d\x28\x4f\x42\x7d\x88\x55\x20\x24\x90\xd5\x96\x21\xd7\x0f\x5a\x22\xdd\x31\x5e\x43\x60\x8b\x07\x31\xc7\x65\x85\xd2\xe6\xfd\x51\xa0\xe2\x42\x4f\xb9\xd2\x54\xf7\xbb\x36\xa6\x16\x5f\x9d\x6a\x72\x8f\x4f\x2d\x2a\x0d\xbe\xd9\xd6\xde\x0c\x08\x91\x97\xa3\xe4\xbe\x4c\xcf\x9e\x26\x2c\x12\x05\x23\xf1\xd6\xc2\x7c\x9a\x09\x28\xa5\x90\x2e\x0d\xb7\x0a\xad\xf5\x7b\x7f\x6d\xd2\x20\x17\x7c\xb9\xfa\x42\x70\x8d\xbf\x35\x59\xf9\xff\xb4\x8e\x8b\xca\x5d\xc0\x7c\x80\x53\x8d\xe0\x0a\x23\x30\x88\xcd\x9e\x6b\x4d\xba\x8b\x6e\x5b\x4b\x51\x60\xd9\x4a\x74\xda\x94\x96\x6d\xa1\x99\xe0\xa9\xe5\x3e\xb4\x6c\x5b\x9e\x4c\xd6\xc3\x55\xc4\x7b\x1b\x7e\x7f\x7f\xbf\x5e\x41\x13\xe3\x95\x90\xcf\xfa\xd3\x99\xb1\x6a\x79\x71\x8e\x78\xae\x52\x9b\x2e\xe0\xc7\xcf\x23\x95\x4d\x41\xa2\x52\xef\xd7\x8d\x1b\x9e\xd7\xc6\x90\x4f\x94\x97\x5b\x87\x35\xde\xf7\x39\x28\x5f\xb1\x44\xdd\x4a\x0e\x5d\x7a\x23\x85\x16\xbf\xda\x8a\x24\x17\x85\x36\x9d\x8b\xaf\xa9\xa4\x3b\x65\xfa\xe6\x87\xc1\xcc\xc1\x98\x46\x32\xae\x2b\x98\xbd\x7a\x9a\x01\xb9\xfd\x72\x97\xbe\xd1\x37\x4e\xe5\x31\x3f\xc9\xee\x79\xbb\xe3\xf3\xe4\x71\xfe\x5a\x07\x3c\xcd\x20\x19\x3b\x7b\x30\x22\x1e\xe5\x6c\x36\x11\xe5\xbd\x77\x33\x80\x87\x46\xe5\xa3\x8a\xef\xf0\xd0\x89\x0b\xe1\xe1\x15\xe3\xf6\xa4\xc8\x69\x0d\xe9\x3d\x39\x6c\x48\x3f\x04\x37\x13\xd0\x4a\x22\xd5\x98\x03\xc7\xc3\xc9\x03\x3d\x3a\x0c\xc0\x7c\x31\x4e\x1b\xf1\x0c\xb6\x2f\x7c\x15\x92\xb0\x9f\xed\xe9\x13\xf9\xf3\x4b\xde\x48\x75\xc8\xff\xfc\x48\x5e\xde\x45\xaf\x34\x80\xfe\xc5\x33\xfd\x8b\x7e\x87\xc5\xa2\xfb\xec\x44\x5c\x5c\xc6\xb3\x3f\x01\x00\x00\xff\xff\xa2\xe2\x8a\x90\x74\x07\x00\x00")

func internalTemplatedataServerTmplBytes() ([]byte, error) {
	return bindataRead(
		_internalTemplatedataServerTmpl,
		"internal/templatedata/server.tmpl",
	)
}

func internalTemplatedataServerTmpl() (*asset, error) {
	bytes, err := internalTemplatedataServerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/templatedata/server.tmpl", size: 1908, mode: os.FileMode(420), modTime: time.Unix(1538668791, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _internalTemplatedataServer_streamTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x94\xc1\x6e\xdb\x3c\x0c\xc7\xef\x79\x0a\xb6\xe8\xc1\x36\xfa\x29\xf7\x0f\xe8\x29\xd8\x76\x1a\x36\x24\xbb\x17\x9e\x4d\x3b\x42\x6c\xc9\x95\xe4\x74\x81\xa0\x77\x1f\x44\xcb\x4a\x5c\xdb\x41\x2f\x3b\x45\xa1\xc8\xdf\x9f\x14\x49\x5b\x5b\x62\xc5\x05\xc2\xa3\x46\x75\x46\x75\x30\x0a\xf3\xf6\x11\xfe\x73\x6e\x63\xed\x3b\x37\x47\x60\x5f\x79\x83\xf4\xf7\xa9\x96\xdd\xa9\x86\xff\x5f\x80\xfd\xcc\x8b\x53\x5e\x23\xfb\x26\xc3\xc9\xb9\xcd\xc6\x5a\x95\x8b\x1a\x81\x1d\x50\x9d\x79\x81\x9a\x30\x00\xd6\x3e\x0d\x74\x0a\x3d\xd0\xd1\xfb\xfb\x9b\x6d\x06\x83\x01\x34\x49\x03\x17\x06\x55\x95\xfb\xe8\x6c\x3b\x7a\x05\xee\x77\x34\x47\x59\x8e\x58\x7f\xc1\x2b\x90\x0a\xd8\xae\xe1\x28\xcc\x90\x3c\x17\xf5\x28\x12\x0d\xc1\x7f\xbb\x05\x6b\x27\x77\xce\x01\xd7\x90\x07\x71\x1f\x1a\xf5\xa1\xd7\x58\x02\x17\x60\x8e\x78\x2d\xc1\x07\x8c\x1e\x8c\xa0\xe6\xd2\xe1\x12\x36\x72\x2c\xb9\x01\xec\xa4\x30\xf8\xc7\x24\x29\x14\xc3\x89\x05\xcb\xb5\x96\x59\x21\x63\xa5\x00\x7b\x2c\xce\x09\x63\xec\x92\xab\xae\x60\x83\xc7\x8f\xce\x70\x29\x52\x48\x32\x6b\x6b\xf9\xcb\x27\xc2\xf6\xf8\xd6\xa3\x36\x30\x34\xcb\xb9\x67\x40\xa5\xa4\x4a\x83\x08\x8a\x72\xfa\x7c\x1f\x9f\xea\x46\xf2\x80\xa2\x9c\xa2\x75\x27\x85\xc6\x1b\xf6\x4a\x42\x24\xb9\xa0\xe8\x66\xb6\xeb\x79\x65\x1c\xda\xae\xc1\x16\x85\xc9\x3d\xf9\x1f\xcc\x04\xb5\xef\x75\xde\x3f\x6d\x54\x5f\x98\xd8\xbc\x90\x4e\x46\xd5\x76\x4a\x1a\xf9\xbb\xaf\x26\x31\xa1\x40\xfa\xa9\x7a\x51\x40\xa2\x21\x9b\x83\xd3\xf5\x39\x88\x62\x0a\x4d\xaf\x04\x68\x36\xa8\xb2\x18\x71\xab\xb1\x38\x30\xa1\xa8\xbb\xfa\x34\x49\xb2\x33\x7a\xad\x7b\x9f\x19\xa7\x98\x6b\xab\x6b\xb2\xf9\xdd\x8e\x09\xef\xb1\x40\x7e\xc6\x44\xe0\xbb\xb5\x23\xc3\x03\x3d\xc0\x4b\x33\xc6\xd2\x00\xe0\x15\x85\x3f\xbc\x80\xe0\x4d\xc4\xc6\x47\x10\xbc\x21\x7e\xb0\xbb\xf8\x44\x6f\xcf\x20\x4f\x5e\xb5\xd5\x35\xf3\x29\x4f\x75\x6e\xf0\x0f\xf2\xb4\xc2\x9d\x76\x73\x97\x6b\xf3\xc5\x57\x97\xbc\x62\xdb\x99\xcb\x3c\xf5\x56\xd7\xe9\x2c\x11\xc2\x51\x3e\x82\x37\x8b\x63\xbe\xbe\x6d\x9f\xe9\x17\xad\xa1\xf2\xdf\xc3\xbb\xab\x78\xaf\xa3\xd4\xb3\xd5\xf1\x1a\x05\x3e\xb4\x66\xa5\x8a\xc5\xdd\x5d\x3a\x5e\x6d\x7f\x03\x00\x00\xff\xff\xb0\x82\xa5\x01\x66\x06\x00\x00")

func internalTemplatedataServer_streamTmplBytes() ([]byte, error) {
	return bindataRead(
		_internalTemplatedataServer_streamTmpl,
		"internal/templatedata/server_stream.tmpl",
	)
}

func internalTemplatedataServer_streamTmpl() (*asset, error) {
	bytes, err := internalTemplatedataServer_streamTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "internal/templatedata/server_stream.tmpl", size: 1638, mode: os.FileMode(420), modTime: time.Unix(1538668823, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"internal/templatedata/base.tmpl": internalTemplatedataBaseTmpl,
	"internal/templatedata/bindata.go": internalTemplatedataBindataGo,
	"internal/templatedata/caller.tmpl": internalTemplatedataCallerTmpl,
	"internal/templatedata/client.tmpl": internalTemplatedataClientTmpl,
	"internal/templatedata/client_stream.tmpl": internalTemplatedataClient_streamTmpl,
	"internal/templatedata/fx.tmpl": internalTemplatedataFxTmpl,
	"internal/templatedata/handler.tmpl": internalTemplatedataHandlerTmpl,
	"internal/templatedata/parameters.tmpl": internalTemplatedataParametersTmpl,
	"internal/templatedata/server.tmpl": internalTemplatedataServerTmpl,
	"internal/templatedata/server_stream.tmpl": internalTemplatedataServer_streamTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"internal": &bintree{nil, map[string]*bintree{
		"templatedata": &bintree{nil, map[string]*bintree{
			"base.tmpl": &bintree{internalTemplatedataBaseTmpl, map[string]*bintree{}},
			"bindata.go": &bintree{internalTemplatedataBindataGo, map[string]*bintree{}},
			"caller.tmpl": &bintree{internalTemplatedataCallerTmpl, map[string]*bintree{}},
			"client.tmpl": &bintree{internalTemplatedataClientTmpl, map[string]*bintree{}},
			"client_stream.tmpl": &bintree{internalTemplatedataClient_streamTmpl, map[string]*bintree{}},
			"fx.tmpl": &bintree{internalTemplatedataFxTmpl, map[string]*bintree{}},
			"handler.tmpl": &bintree{internalTemplatedataHandlerTmpl, map[string]*bintree{}},
			"parameters.tmpl": &bintree{internalTemplatedataParametersTmpl, map[string]*bintree{}},
			"server.tmpl": &bintree{internalTemplatedataServerTmpl, map[string]*bintree{}},
			"server_stream.tmpl": &bintree{internalTemplatedataServer_streamTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

